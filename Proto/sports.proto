syntax = "proto3";
package sports;

import "google/protobuf/timestamp.proto";

// The Sports service definition.
service Sports {
  // ListEvents will return a collection of all events.
  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse) {}
  // GetEvent return a single event.
  rpc GetEvent(GetEventRequest) returns (Event) {}
}

/* Requests/Responses */

message GetEventRequest {
  int64 id = 1;
}

message ListEventsRequest {
    ListEventsRequestFilter filter = 1;
    ListEventsRequestOrder order = 2;
}

// Response to ListEvent call.
message ListEventsResponse {
  repeated Event events = 1;
}

// Filter for listing events.
message ListEventsRequestFilter {

  //filter by sport types.
  repeated string sport = 1;

  //filter by visible events
  bool only_visible_events = 2;
}


// Order for listing events.
message ListEventsRequestOrder {
  string field = 1;
}

/* Resources */

// A event resource.
message Event {
  // ID represents a unique identifier for the event.
  int64 id = 1;
  // Name is the name of the event
  string name = 2;
  // Sport represents the sport type of the event (ie cricket, football)
  string sport = 3;
  // Visible represents whether or not the event is visible.
  bool visible = 4;
  // AdvertisedStartTime is the time the event is advertised to start.
  google.protobuf.Timestamp advertised_start_time = 5;
  // Status = CLOSED indicates if advertised_start_time is in the past. Status = OPEN if advertised_start_time in future.
  string status = 6;
}